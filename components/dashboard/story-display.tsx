import { Story } from "@/types/story";
import { UserType, USER_LIMITS } from "@/types/user";
import { Button } from "@/components/ui/button";
import { ChevronLeft, ChevronRight } from "lucide-react";
import { useState } from "react";
import UpgradeModal from "./upgrade-modal";

interface StoryDisplayProps {
  story: Story | null;
  userType: UserType;
}

export function StoryDisplay({ story, userType }: StoryDisplayProps) {
  const [currentPage, setCurrentPage] = useState(0);
  const [showUpgradeModal, setShowUpgradeModal] = useState(false);

  if (!story) return null;

  const userLimits = USER_LIMITS[userType];
  const isLastPage = currentPage === userLimits.maxPages - 1;
  const isAtLimit = currentPage >= userLimits.maxPages - 1;
  const isUpgradePage = currentPage === userLimits.maxPages;

  const handleNextPage = () => {
    if (currentPage < story.pages.length) {
      if (isLastPage) {
        setCurrentPage(currentPage + 1); // Move to upgrade page
      } else if (isUpgradePage) {
        setShowUpgradeModal(true);
      } else {
        setCurrentPage(currentPage + 1);
      }
    }
  };

  const handlePrevPage = () => {
    if (currentPage > 0) {
      setCurrentPage(currentPage - 1);
    }
  };

  return (
    <div className="w-full max-w-4xl mx-auto space-y-8">
      <div className="text-center space-y-2">
        <h1 className="text-3xl font-bold">{story.title}</h1>
        <p className="text-muted-foreground">Generated by PictoStory</p>
      </div>

      {/* Uploaded image - fixed at the top */}
      <div className="relative rounded-lg overflow-hidden">
        <img
          src={story.pages[0].imageUrl}
          alt="Uploaded image"
          className="w-full h-[300px] object-cover"
        />
      </div>

      {/* Paginated content */}
      <div className="space-y-8 relative">
        <div className="space-y-4">
          {isUpgradePage ? (
            <div className="text-center space-y-4">
              <h2 className="text-2xl font-bold">Want to read more?</h2>
              <p className="text-lg text-muted-foreground">
                Upgrade your plan to access the full story and unlock more
                features.
              </p>
              <Button onClick={() => setShowUpgradeModal(true)}>
                Upgrade Now
              </Button>
            </div>
          ) : (
            <p className="text-lg leading-relaxed">
              {story.pages[currentPage].text}
            </p>
          )}
        </div>

        <div className="flex justify-between items-center">
          <Button
            variant="outline"
            onClick={handlePrevPage}
            disabled={currentPage === 0}
          >
            <ChevronLeft className="h-4 w-4 mr-2" />
            Previous
          </Button>

          <span className="text-sm text-muted-foreground">
            Page {currentPage + 1} of {userLimits.maxPages + 1}
          </span>

          <Button
            variant="outline"
            onClick={handleNextPage}
            disabled={currentPage === userLimits.maxPages}
          >
            Next
            <ChevronRight className="h-4 w-4 ml-2" />
          </Button>
        </div>

        {showUpgradeModal && (
          <div className="fixed inset-0 bg-black/50 backdrop-blur-sm flex items-center justify-center z-50">
            <UpgradeModal
              userType={userType}
              isVisible={true}
              onClose={() => setShowUpgradeModal(false)}
            />
          </div>
        )}
      </div>
    </div>
  );
}
